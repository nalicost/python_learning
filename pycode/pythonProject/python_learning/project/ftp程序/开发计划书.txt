"""
                            本次开发为简单的网盘程序模拟，以windows为运行环境
"""
# 开发要求
1. 网络搭建
    使用tcp协议
2. 使用语言
    python3
3. 实现功能
    （1）可以接受多个客户端的请求，同时完成任务
        服务端：使用multiprocessing为每一个发出请求的客户端创建一个进程，包含其特有的套接字与业务处理逻辑
    （2）客户端可以查看服务端内文件
        客户端：发送查看请求
        服务端：从储存位置调出文件相关信息，并组织响应，发回客户端，传完时，发送结束响应
        客户端：接受并解析响应，print至命令台上，得到结束响应时，结束写入
    （3）客户端可以下载服务端内文件
        客户端：发送下载请求
        服务端：从储存位置查询到相关文件，并组织响应，将文件逐步传送至客户端，传完时，发送结束响应
        客户端：持续接受文件内容，并写入新文件，直到接收结束响应，结束写入
    （4）客户端可以上传文件至服务端
        客户端：发出上传请求
        服务端：根据逻辑判断名字是否重复，并组织响应
        客户端：得到肯定响应，则逐步上传文件，并在传完时，发送结束请求，否则重新组织请求
        服务端：逐步接受文件并写入新文件，得到结束请求时，结束写入
    （5）使用命令行构建ui，指引操作
        一句一行，（显示上传下载进度）
    （6）客户端退出
        客户端：发出退出请求，并结束客户端
        服务端：收取退出请求，结束回收对应进程
4. 内部协议
    客户端格式：请求头 （请求内容）
    1. V：查看所有文件请求
        注：无请求内容
    2. D：下载内容请求
        注：请求内容为所需下载文件名
    3. U：上传内容请求
        注：请求内容为上传文件名
    4. Q：退出请求
        注：无请求内容
    5. E：文件传输完毕响应
    服务端格式:（响应内容）响应头
    1. P：许可响应
        注：无响应内容
    2. E: 传输终止
5. 具体细节与注意事项
    （1）使用multiprocessing来完成并发的效果
    （2）客户端查看的文件仅限于普通文件，不包含文件夹，隐藏文件
    （3）客户端不允许上传服务端名字相同的文件
    （4）通过print构建客户端ui
    （5）服务端退出时所有子进程一并退出
    （6）子进程中关闭服务端套接字，子进程完成后关闭专属套接字；父进程accept后关闭专属套接字，等待下次accept
    （7）服务端一般不退出
    （8）服务端的各项服务，与客户端各项服务封装为类